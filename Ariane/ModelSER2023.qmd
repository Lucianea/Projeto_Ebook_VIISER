---
title: 'Quarto book: Contando histórias com Quarto'
lang: pt
style: justify
number-sections: true
authors:
  - name: Ariane Hayana Thomé de Farias
    city: Boa Vista
    state: Roraima/RR/BR
    email: ariane.hayana@gmail.com

abstract: |
  
  Com o avanço das tecnologias, automatizar processos repetitivos tornou-se de fundamental importância para otimizar o tempo e gerar *insights* para uma melhor tomada de decisão. Um ponto cabe destaque: em meio a tantas ferramentas, como comunicar seus resultados? Traduzir dados em informação é uma tarefa que, caso não seja bem executada, pode não expressar o que se deseja. Dentre as possibilidades atuais de desenvolvimento de produtos automatizados, temos o Quarto, a nova geração de `R` *Markdown*. Assim, com objetivo de explorar as funcionalidades e a criação de um livro desenvolvido em *Quarto*, este capítulo abordará conceitos, definições e orientações para o desenvolvimento de um livro desde a instalação do Quarto até a etapa de publicação no Quarto Pub.
  
  Palavras-Chave: Quarto; Livro; R.
  
bibliography: References.bib
#output:
#  rticles::springer_article
format: pdf
editor: visual
---

# Introdução {#sec-intro}

Traduzir dados complexos em um conteúdo de fácil entendimento não é uma tarefa trivial considerando que, embora existam diversas ferramentas para a apresentação de resultados, de nada adianta se a abordagem utilizada não for adequada para comunicar com os tomadores de decisão. A imensa quantidade de dados disponível nas mais diversas fontes é uma realidade desafiadora para extrair *insights* e gerar resultados e neste sentido, uma das possibilidades para a contextualização de narrativas embasadas em dados é através da utilização do Quarto. Com ele, é possível criar diversos produtos, tais como relatórios automatizados em `html`, `pdf`, `epub`, assim como possibilita a criação de *blogs* que podem ser atualizados e compartilhados na *web* de forma rápida e em versões multilíngues, com conteúdo textual e em códigos nas linguagens `R`, `Python` e `Julia`, por exemplo. Neste contexto, este capítulo visa explorar as funcionalidades do *Quarto Book* desde a instalação, com orientações de quais são os requesitos necessários para a utilização do Quarto localmente e na nuvem. Também será apresentado a estrutura básica de um documento Quarto e, por fim, o passo a passo dos procedimentos necessários para publicação do *Quarto Book*.

No que se refere à organização deste capítulo, este trabalho encontra-se organizado em seções dispostas da seguinte forma: além desta seção introdutória, o objetivo é apresentado na @sec-obj. Também são apresentadas as aplicações do Quarto, contextualizando definições e pilares da utilização do Quarto na @sec-aplicacao. Nesta seção também são abordados os passos necessários para a publicação do *Quarto Book* no Quarto Pub. Na @sec-resultados temos os resultados de um modelo exemplificativo do livro personalizado. Por fim, a @sec-conclusao são apresentadas as considerações finais e posteriormente, as referências.


# Objetivo {#sec-obj}

O objetivo principal deste capítulo é apresentar as etapas de criação de um livro desenvolvido com Quarto, trazendo orientações preliminares sobre conceitos básicos para a criação deste, com a exemplificação de um livro e sua publicação no Quarto Pub.

# Aplicação {#sec-aplicacao}

Quarto é uma versão multilíngue da próxima geração do `R` Markdown e com ele é possível criar relatórios automatizados tanto com a linguagem R, como em Python e Julia. Além disso, pode-se criar diversos tipos de documentos, apresentações, livros, *blogs*, entre outros recursos. O objetivo neste capítulo consiste em abordar as etapas de desenvolvimento de um livro com Quarto, remetendo aos procedimentos necessários para a criação do *Quarto book* no RStudio. Para tanto, a primeira etapa metodológica é realizar as instalações necessárias para utilizar o Quarto no RStudio. Ressalta-se que Quarto é um *software* independente de `R` e pode ser utilizado em diversas ferramentas (RStudio, VS Code, Jupyter Lab, por exemplo). Assim, os pré-requisitos são:

-   Baixar e instalar a versão mais recente do Quarto disponível neste [link](https://quarto.org/docs/get-started/);

-   Baixar e instalar a versão mais recente do `R` clicando [aqui](https://cran.r-project.org/). Caso já tenha, verifique se o seu `R` está atualizado;

-   Baixar e instalar a [versão mais recente do RStudio](https://posit.co/download/rstudio-desktop/);

-   Instalar os seguintes pacotes:

```{r}
#| label: code_01
#| echo: true
#| eval: false
pacotes <- c("tidyverse", "quarto", "rmarkdown", "dados", "reactable")
install.packages(pacotes)
```

Vale ressaltar que cada sistema operacional (SO) possui especificidades de instalação, portanto, é importante verificar as configurações do SO durante as instalações.

Orientações sobre a utilização do RStudio com Quarto estão disponíveis na página do [Quarto.org](https://quarto.org/docs/get-started/hello/rstudio.html). Outra opção é utilizar o *Posit Cloud*, que possibilita a utilização da IDE do RStudio na nuvem através do [site](https://posit.cloud/) da Posit. O passo a passo está descrito também em @quarto-rladies.

## Estrutura {#sec-estrutura}

Para o desenvolvimento do *Quarto book* é importante o entendimento sobre a estrutura que o compõe, que pode ser resumida em três partes principais, conforme @fig-Figura01:

![Estrutura. Fonte: A autora.](img/Figura01.png){#fig-Figura01 fig.cap="center" fig-align="center" width="70%"}

-   YAML (*Yet Another Markup Language*): local onde são inseridos os metadados sobre o documento (formatação, data, título, autor, entre outros). Nele, é possível configurar a aparência do documento, bem como especificar quais serão os formatos de saída (HTML, pdf, Word, etc);

-   Texto: usa *Markdown* como sua sintaxe de documento principal;

-   Códigos: versão multilíngue, portanto, nos *chunks* (blocos de códigos) podemos inserir códigos em `R`, Python, Julia e outros.

Partindo do entendimento da estrutura comum entre os documentos desenvolvidos em Quarto, parte-se para a criação do *Quarto book*. As configurações do livro estão contidas em um arquivo separado que estará localizado no **diretório do projeto**, que é denominado `_quarto.yml`.

Este arquivo contém a configuração inicial do livro e é onde são inseridas configurações sobre o documento (formatação, data, título, autor, entre outros). Para exemplificar, a @fig-Figura02 mostra algumas configurações do `_quarto.yml`. Alguns pontos cabem destaque nas configurações do *Quarto book*: **(1)** a estrutura do YAML é baseada em indentação, portanto, é importante que as configurações estejam corretamente indentadas, caso contrário, aparecerá alguma mensagem de erro durante a renderização do livro; **(2)** o Quarto *book* pode ser configurado com diferentes formatos de saída, entretanto, caso seu arquivo contenha alguma funcionalidade específica de um dos formatos, possivelmente não irá funcionar exitosamente em outro formato (como, por exemplo, a utilização de gráficos interativos no formato HTML, que não funcionarão em pdf).

![Tela do `_quarto.yml`. Fonte: A autora.](img/Figura02.png){#fig-Figura02 fig.cap="center" fig-align="center" width="35%"}

Cabe destacar que o Quarto é baseado no Pandoc, assim, na fase de composição do conteúdo no livro, a sintaxe básica é **markdown**. Conforme apresentado na documentação do @quarto-markdown,

> *"o markdown do Pandoc é uma versão estendida e ligeiramente revisada da sintaxe Markdown de John @john"*.

Portanto, para pessoas que devolvem documentos com Markdown/R Markdown, a sintaxe será a mesma em algumas estruturas. Na @sec-markdown será abordado algumas sintaxes básicas para personalização do texto.

### Markdown {#sec-markdown}

Nesta seção serão apresentadas algumas das possíveis configurações para personalização do texto. A primeira consiste em criar títulos/subtítulos (ou seções e subseções), que são estruturadas conforme a quantidade de caractere `#`, seguido do texto desejado, conforme apresentado na @fig-Figura03. Ressalta-se que pode criar até seis níveis distintos com as `#`. Observe que, à medida que aumenta a quantidade de `#`, menor será o nível do título/subtítulos.

\newpage

![Títulos/Subtítulos ou Seções/Subseções. Fonte: A autora.](img/Figura03.png){#fig-Figura03 fig-align="center" width="450"}

Outras configurações básicas para o texto estão disponíveis no esquemático da @fig-Figura04:

![Estruturas para o texto. Fonte: A autora.](img/Figura04.png){#fig-Figura04 fig-align="center" width="560"}

Para a personalização dos textos, existem diversas possibilidades, com detalhes disponíveis na documentação do @quarto-markdown.

\newpage

Além disso, outra praticidade na construção de um livro com Quarto é a inserção de referências cruzadas, que facilitam a navegação dos leitores em seu documento, possibilitando a criação de referências numeradas automaticamente para `exemplos`, `exercícios`, `definições`, `corolários` e outros. A @fig-Figura05 apresenta algumas estruturas, que podem ser criadas com o caractere `#` no prefixo.

![Nomenclaturas e referências. Fonte: @quarto-ref.](img/Figura05.png){#fig-Figura05 fig-align="center" width="200"}

Assim, por exemplo, caso queira queira criar um exercício, basta inserir o prefixo `#exr-`, conforme o código:

``` markdown
::: {#exr-exercicio01}
Enunciado do meu exercício aqui. Enunciado do meu exercício aqui. 
:::

::: callout-note
## Solução
Solução do meu exercício aqui. Solução do meu exercício aqui. 
:::
```

Como resultado do código acima no Quarto *book* será:

::: {#exr-exercicio01}
Enunciado do meu exercício aqui. Enunciado do meu exercício aqui.
:::

::: callout-note
## Solução

Solução do meu exercício aqui. Solução do meu exercício aqui.
:::

### Código {#sec-codigo}

As saídas para os blocos de códigos (*chunks*) podem ser personalizadas de diversas formas. É possível modificar a largura e altura de gráficos, por exemplo, bem como ocultar a apresentação dos códigos em seu documento, deixando apenas os resultados. Para tanto, os argumentos podem ser inseridos precedidos de `#|`, conforme o exemplo a seguir:

```{{r}}
#| fig-width: 4
#| fig-height: 2
#| warning: false
#| fig-align: "center"

library(ggplot2)
plot <- ggplot(iris, 
  aes(x = Species,
      y =  Sepal.Length)) + 
  geom_boxplot(aes(fill = Species)) +
  xlab("Espécies") + 
  ylab("Sepal Length") + 
  theme_grey();plot
```

```{r}
#| label: code_02
#| fig-width: 4
#| fig-height: 2
#| warning: false
#| fig-align: "center"
#| echo: false

library(ggplot2)
plot <- ggplot(iris, 
  aes(x = Species,
      y =  Sepal.Length)) + 
  geom_boxplot(aes(fill = Species)) +
  xlab("Espécies") + 
  ylab("Sepal Length") + 
  theme_grey();plot
```

Note que foi definida uma largura (*fig-width*), altura (*fig-height*), alinhamento (*fig-align*) e evitou-se que avisos gerados pelo código apareçam no documento utilizando `warning: false`.

Diversas configurações podem ser utilizadas nos *chunks* e na @fig-Figura06 apresenta-se algumas possibilidades:

\newpage 

![Configurações de blocos de código. Fonte: @quarto-code.](img/Figura06.png){#fig-Figura06 fig-align="center" width="590" height="430"}


### Quarto Pub {#sec-quarto-pub}

O Quarto Pub é um serviço gratuito de publicação de conteúdo criado com o Quarto. Os documentos criados são **visíveis publicamente** e fáceis para publicar. Para a publicação, alguns passos devem ser seguidos:

Passo 1) Criar uma conta gratuita no [Quarto Pub](https://quartopub.com);

<!-- ![Página Quarto Pub. Fonte: @quarto-pub.](img/Figura14.png){#fig-Figura14 fig-align="center"} -->

Passo 2) Executar o comando no **Terminal**:

``` {.default shortcodes="false"}
quarto publish quarto-pub
```

![Configuração no terminal. Fonte: A autora.](img/Figura07.png){#fig-Figura07 fig-align="center" width="380" height="130"}


Passo 3) Aguardar e seguir as instruções que aparecerão na tela:

``` {.default shortcodes="false"}
$ quarto publish quarto-pub
? Authorize (Y/n) › 
❯ In order to publish to Quarto Pub you need to
  authorize your account. Please be sure you are
  logged into the correct Quarto Pub account in 
  your default web browser, then press Enter or 
  'Y' to authorize.
```

Passo 4) Após autorização e autenticação na conta, volte ao RStudio para confirmar que deseja publicar;

Passo 5) Aguardar renderizar e implantar. Em seguida, uma janela do seu navegador será aberta e o seu conteúdo estará pronto para visualização.

Os detalhes de publicação no Quarto Pub podem ser visualizados através do [link](https://ariane.quarto.pub/rladies_goiania/#/quarto-pub-1). Em face às etapas de desenvolvimento abordadas nesta subseção, destaca-se a possibilidade de publicação não somente do *Quarto Book*, mas também de *blogs* e demais documentos desenvolvidos com Quarto.


# Resultados e Discussão {#sec-resultados}

Nesta seção apresenta-se os resultados obtidos no desenvolvimento de um modelo prático de um livro desenvolvido com *Quarto Book*. Todos os códigos e pastas relacionadas ao modelo apresentado podem ser acessados no repositório disponível em @github-ser. Na Figura @fig-Figura08 é possível visualizar a capa do livro:

\newpage 

![Capa do modelo. Fonte: A autora.](img/Figura08.png){#fig-Figura08 fig-align="center"}


Perceba que metadados e outras informações são dispostas na capa, sendo possível a inserção de autores, imagens, índice entre outras. Tais configurações são inseridas no arquivo `_quarto.yml`, que contém:

``` markdown
project:
  type: book
  output-dir: docs 

bibliography: references.bib # Referências
lang: pt # Idioma: português (pt)


book:
  title: "Contando histórias com Quarto" # Título do livro
  subtitle: "Quarto Book" # Subtítulo do livro
  author: 
    - name: "Ariane Hayana" # Nome Autor(a) 1
      orcid: "0000-0003-1571-8739" # ORCID Autor(a) 1
    - name: "Autor 2" # Nome Autor(a) 2
      orcid: "0000-0000-0000-0000" # ORCID Autor(a) 2
    - name: "Autor 3" # Nome Autor(a) 3
      orcid: "0000-0000-0000-0000" # ORCID Autor(a) 3     
  date: "04/28/2023" # Inserir no formato mm/dd/yyyy
  favicon: logo.png # Ícone na aba do navegador

  sidebar: 
    style: docked # Estilo: 'docked' ou 'floating'
  search: true
  repo-url: https://github.com/a-hayana/ser2023 # Url do repositório 
  sharing: [twitter, facebook, linkedin] # Redes que deseja compartilhar
  reader-mode: true # Se 'true', oculta a barra lateral e o sumário
  page-footer: 
    left: "SER | Seminário Internacional de Estatística com `R`" # Rodapé esquerdo
    right: "Por: Ariane Hayana" # Rodapé direito
  chapters:
    - index.qmd
    - introducao.qmd
    - desenvolvimento.qmd
    - referencias.qmd

format:
  html:
    theme:
      light: [united,theme.scss]
      dark: superhero
    cover-image: logo.png
editor: visual
```

Note que o formato do livro foi definido em `HTML`, porém, outras configurações são possíveis, tais como `.pdf` e `.epub`, por exemplo. Após definidas as configurações desejadas, partiu-se para etapa de criação dos capítulos do livro, que ficam acessíveis na barra lateral esquerda da @fig-Figura08. Em cada capítulo foram inseridas os seguintes conteúdos:

-   **Introdução** - Neste capítulo, foram dispostos no modelo de criação:

\newpage

![Capítulo *Introdução*. Fonte: A autora.](img/Figura09.png){#fig-Figura09 fig-align="center"}

Veja que neste capítulo foi possível inserir o texto, bem como referenciar outros capítulos, além de poder introduzir uma tabela interativa criada com o pacote `reactable` [@reactable] e com dados oriundos do pacote `dados` [@dados]. Para tornar o texto mais limpo, os códigos da tabela foram ocultados utilizando no *chunk* `code-fold: true`. É possível navegar entre os capítulos ao final da página.

-   **Desenvolvimento** - No desenvolvimento, além da parte textual, os conteúdos foram divididos em subseções (conforme apresentado na @sec-markdown). Outra aplicação interessante é a utilização de abas para apresentar conteúdos diversos, sem sair do capítulo. Este trecho foi desenvolvido com a utilização do `panel-tabset`, conforme o trecho do código a seguir:

``` md
::: panel-tabset
## Aba 1
![](img/img1.png){fig-align="center"}

## Aba 2
![](img/img2.png){fig-align="center"}
:::
```

Note que para cada aba é definido um título que aparecerá na parte superior e dará acesso para cada conteúdo.

Também temos a possibilidade de inserir equações, criar exemplos e exercícios. No exemplo do modelo temos um exercício e solução, conforme apresentado:

::: {#exr-x}
Suponha que as notas de uma turma de 5 alunos foram: 6, 7, 8, 9 e 10. Calcule a média.
:::

::: callout-note
## Solução

Para calcular a média das notas, podemos usar a seguinte fórmula:

Média = $\frac{\text{soma das notas}}{\text{número de alunos}}$

Para calcular a média, podemos seguir os seguintes passos:

Soma = $6 + 7 + 8 + 9 + 10 = 40$

Média = $\frac{\text{soma}}{\text{número de alunos}} = \frac{40}{5} = 8$

Portanto, a média das notas da turma é 8.
:::

Outro ponto relevante é a praticidade de inserção de referências e citações no *Quarto Book*, cujas referências são citadas e referenciadas em um arquivo `.bib`, onde serão preenchidas as informações de autores(as), sendo possível também a citação de pacotes, livros, artigos, entre outros. Tais elementos podem ser dispostos conforme a normatização desejada e aparecerão no capítulo *Referências* padronizados conforme mostra a @fig-Figura10:

![Exemplo de *Referências* no *Quarto Book*. Fonte: A autora.](img/Figura10.png){#fig-Figura10 fig-align="center"}

Finalizadas todas as etapas de criação, ao final parte-se para a publicação do material criado no Quarto Pub. Seguindo as etapas sugeridas na @sec-quarto-pub, ao final, o livro estará disponível para acesso em qualquer navegador. No exemplo deste livro modelo, o mesmo está acessível no endereço <https://ariane.quarto.pub/contando-historias-com-quarto/>.


# Conclusão {#sec-conclusao}

Neste capítulo apresentou-se orientações e definições de como desenvolver um *Quarto Book*. Foram abordados conceitos iniciais, explorando desde a instalação do Quarto até a etapa de publicação do livro no Quarto Pub. Dentre as principais contribuições, destaca-se a possibilidade de automatizar conteúdos, além de trazer interatividade e compartilhamento de informações através da publicação do conteúdo criado no Quarto Pub. Viu-se neste capítulo algumas das diversas possibilidades de criação e personalização de um livro desenvolvido com Quarto, e assim como qualquer outra ferramenta, é importante destacar que o ingrediente principal para o aprendizado do Quarto é a *curiosidade* em explorar a rica documentação disponível no [Quarto.org](https://quarto.org/). 


# Referências {#sec-referencias}
